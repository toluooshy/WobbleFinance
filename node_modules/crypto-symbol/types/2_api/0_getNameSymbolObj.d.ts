/**
 * @param {void}
 * @return { [prop:string]:string } the clone of original {name:symbol} WITHOUT custom name symbol pair added by user
 * it is a clone, so it wont affect the original object if you mutate it
 */
export declare const getIntactNameSymbolObj: () => {
    [x: string]: string;
};
/**
 * @param {void}
 * @return { [prop:string]:string } the clone of original {name:symbol} PLUS custom name symbol pair added by user
 * it is a clone, so it wont affect the original object if you mutate it
 */
export declare const getNameSymbolObj: () => {
    [x: string]: string;
};
/**
 * @param {void}
 * @return {string[]} return all the names PLUS custom name in array
 * mutating this will not affecting anything
 */
export declare const getNames: () => string[];
export declare const names: () => string[];
/**
 * @param {void}
 * @return {string[]} return all the symbols PLUS custom symbol in array
 * mutating this will not affecting anything
 */
export declare const getSymbols: () => string[];
export declare const symbols: () => string[];
